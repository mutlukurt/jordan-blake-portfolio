module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: [
    'eslint:recommended',
    'prettier'
  ],
  parserOptions: {
    ecmaVersion: 'latest',
    sourceType: 'module',
  },
  rules: {
    'no-unused-vars': 'warn',
    'no-console': 'off',
    'prefer-const': 'error',
    'no-var': 'error',
    'object-shorthand': 'error',
    'prefer-template': 'error',
    'template-curly-spacing': 'error',
    'arrow-spacing': 'error',
    'no-duplicate-imports': 'error',
    'sort-imports': 'off',
    'indent': ['error', 2],
    'quotes': ['error', 'single'],
    'semi': ['error', 'always'],
    'comma-dangle': ['error', 'always-multiline'],
    'no-trailing-spaces': 'error',
    'eol-last': 'error',
    'max-len': ['warn', { 'code': 100 }],
    'no-multiple-empty-lines': ['error', { 'max': 2 }],
    'space-before-function-paren': ['error', 'always'],
    'space-before-blocks': 'error',
    'keyword-spacing': 'error',
    'space-infix-ops': 'error',
    'object-curly-spacing': ['error', 'always'],
    'array-bracket-spacing': ['error', 'never'],
    'comma-spacing': 'error',
    'key-spacing': 'error',
    'func-call-spacing': 'error',
    'block-spacing': 'error',
    'brace-style': ['error', '1tbs'],
    'camelcase': 'error',
    'new-cap': 'error',
    'new-parens': 'error',
    'no-array-constructor': 'error',
    'no-new-object': 'error',
    'no-new-wrappers': 'error',
    'no-new-func': 'error',
    'no-new': 'error',
    'no-eval': 'error',
    'no-implied-eval': 'error',
    'no-script-url': 'error',
    'no-sequences': 'error',
    'no-throw-literal': 'error',
    'no-unmodified-loop-condition': 'error',
    'no-useless-call': 'error',
    'no-useless-concat': 'error',
    'no-useless-escape': 'error',
    'no-useless-return': 'error',
    'prefer-promise-reject-errors': 'error',
    'require-await': 'error',
    'yoda': 'error',
    'eqeqeq': 'error',
    'curly': ['error', 'all'],
    'no-empty': 'error',
    'no-extra-semi': 'error',
    'no-irregular-whitespace': 'error',
    'no-mixed-spaces-and-tabs': 'error',
    'no-spaced-func': 'error',
    'no-unexpected-multiline': 'error',
    'valid-jsdoc': 'off',
    'require-jsdoc': 'off',
  },
  globals: {
    'window': 'readonly',
    'document': 'readonly',
    'console': 'readonly',
    'localStorage': 'readonly',
    'sessionStorage': 'readonly',
    'fetch': 'readonly',
    'Request': 'readonly',
    'Response': 'readonly',
    'Headers': 'readonly',
    'FormData': 'readonly',
    'URLSearchParams': 'readonly',
    'AbortController': 'readonly',
    'AbortSignal': 'readonly',
    'performance': 'readonly',
    'requestAnimationFrame': 'readonly',
    'cancelAnimationFrame': 'readonly',
    'IntersectionObserver': 'readonly',
    'ResizeObserver': 'readonly',
    'MutationObserver': 'readonly',
    'CustomEvent': 'readonly',
    'Event': 'readonly',
    'EventTarget': 'readonly',
    'Node': 'readonly',
    'Element': 'readonly',
    'HTMLElement': 'readonly',
    'HTMLDivElement': 'readonly',
    'HTMLButtonElement': 'readonly',
    'HTMLInputElement': 'readonly',
    'HTMLTextAreaElement': 'readonly',
    'HTMLFormElement': 'readonly',
    'HTMLAnchorElement': 'readonly',
    'HTMLImageElement': 'readonly',
    'HTMLCanvasElement': 'readonly',
    'CanvasRenderingContext2D': 'readonly',
    'WebGLRenderingContext': 'readonly',
    'WebGL2RenderingContext': 'readonly',
    'WebGLProgram': 'readonly',
    'WebGLShader': 'readonly',
    'WebGLBuffer': 'readonly',
    'WebGLTexture': 'readonly',
    'WebGLFramebuffer': 'readonly',
    'WebGLRenderbuffer': 'readonly',
    'WebGLUniformLocation': 'readonly',
    'WebGLActiveInfo': 'readonly',
    'WebGLShaderPrecisionFormat': 'readonly',
    'WebGLContextAttributes': 'readonly',
    'WebGLContextEvent': 'readonly',
    'WebGLProgram': 'readonly',
    'WebGLShader': 'readonly',
    'WebGLBuffer': 'readonly',
    'WebGLTexture': 'readonly',
    'WebGLFramebuffer': 'readonly',
    'WebGLRenderbuffer': 'readonly',
    'WebGLUniformLocation': 'readonly',
    'WebGLActiveInfo': 'readonly',
    'WebGLShaderPrecisionFormat': 'readonly',
    'WebGLContextAttributes': 'readonly',
    'WebGLContextEvent': 'readonly',
  },
};
